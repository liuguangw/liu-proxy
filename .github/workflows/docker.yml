name: build docker image

on:
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  develop:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy
      - name: check fmt
        run: cargo fmt --all -- --check
      - name: clippy
        run: cargo clippy
      - name: build app
        run: cargo build --release
      - name: copy build files
        run: |
          mkdir -p ./dist
          cp -r ./config ./web ./target/release/liu-proxy ./dist/
          cp ./Dockerfile-github ./dist/Dockerfile
          ls -al ./dist

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: liuguangw/liu-proxy,${{ env.REGISTRY }}/liuguangw/liu-proxy
          tags: |
            type=raw,latest
      
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./dist
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
